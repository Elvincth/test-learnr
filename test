---\ntitle: \"Airbnb listings in Edinburgh\"\noutput: \n  learnr::tutorial:\n    progressive: true\n    allow_skip: true\n    css: \"css/font-size.css\"\nruntime: shiny_prerendered\ndescription: >\n  Get started with data frames and data visualisation in R using the tidyverse.\n---\n\n<!-- Add JavaScript code for making the exercise code larger -->\n<script language=\"JavaScript\" src=\"js/exercise-font-size.js\"></script>\n\n```{r setup, include=FALSE}\nlibrary(learnr)\nlibrary(gradethis)\nlibrary(tidyverse)\nlibrary(dsbox)\nlibrary(httr) #for http request\n\ncurrent_path <- rstudioapi::getSourceEditorContext()$path\n\n\n#get source file content\nsource_str <- read_file(current_path)\n\nprint(str_extract_all(source_str, regex(\"/\\\\{r quiz-rows,.*\\\\}/g\", multiline = TRUE)))\n\n\n\n# load packages-----------------------------------------------------------------\nnew_recorder <- function(tutorial_id, tutorial_version, user_id, event, data) {\n\ncat(\"-------event received----\\n\")\ncat(tutorial_id, \" (\", tutorial_version, \"): \", user_id, \", \", event, \"\\n\", data$label, \", \", data$answers, \", \", data$correct, \",\\n\", sep = \"\")\nprint (data)\ncat(\"-------end event ---\\n\\n-\")\n# process data here\n}\n# options(tutorial.event_recorder = new_recorder)\n# options(tutorial.event_recorder = learnr:::debug_event_recorder)\n\n\n# set options for exercises and checking ---------------------------------------\n\ngradethis_setup()\n\n# hide non-exercise code chunks ------------------------------------------------\n\nknitr::opts_chunk$set(echo = FALSE)\n```\n\n## Introduction\n\n```{r grassmarket, fig.margin = TRUE, echo = FALSE, out.width = \"100%\", fig.cap=\"Photo by Madeleine Kohler on Unsplash\"}\nknitr::include_graphics(\"images/madeleine-kohler-90Qn643Pq9c-unsplash.jpg\")\n```\n\nRecent developments in Edinburgh regarding the growth of Airbnb and its impact on the housing market means a better understanding of the Airbnb listings is needed. Using data provided by Airbnb, we can explore how Airbnb availability and prices vary by neighbourhood.\n\nThe data come from the [Kaggle database](https://www.kaggle.com/thoroc/edinburgh-inside-airbnb/version/2), and was originally distributed by [Inside Airbnb](http://insideairbnb.com/get-the-data.html) on 25 June 2019.\n\nThe data has been modified to better serve the goals of this exploration.\n\n### Learning goals\n\nThe goal of this tutorial is not to conduct a thorough analysis of Airbnb listings in Edinburgh, but instead to give you a chance to practice your data visualisation and interpretation skills.\n\n### Packages\n\nWe'll use the `tidyverse` package for this analysis and the `dsbox` package for the data. Run the following code to load this package.\n\n```{r load-packages, exercise=TRUE}\nlibrary(tidyverse)\nlibrary(dsbox)\n```\n\n```{r load-packages-solution}\nlibrary(tidyverse)\nlibrary(dsbox)\n```\n\n```{r load-packages-check}\ngrade_this_code(\"The tidyverse and dsbox packages are now loaded!\")\n```\n\n\n## Data\n\n### Load and glimpse\n\nThe data is in the `dsbox` package and it's called `edibnb`. \n\nYou can view the data using\n\n```{r glimpse-data, mark=10, exercise=TRUE}\nglimpse(edibnb)\n```\n\n### Getting to know your data\n\n```{r quiz-rows, mark=2}\nquestion(\"What does each row in the `edibnb` dataset represent?\",\n    answer(\"The values of a certain variable\"),\n    answer(\"An individual Airbnb listing\",\n           correct = TRUE,\n           message = \"Each row in the dataset contains one observation of each field, each relating to a single Airbnb listing.\"),\n    answer(\"An Airbnb booking\"),\n    answer(\"An Edinburgh neighbourhood\")\n  )\n```\n\n### Number of observations\n\nHow many Airbnb listings are included in this dataset? Use the following code block to find out.\n\n```{r edibnb-nrow, exercise=TRUE}\n\n```\n\n```{r edibnb-nrow-hint-1}\nnrow(___)\n```\n\n```{r edibnb-nrow-check}\ngrade_this({\n  if(identical(.result, 13245) | identical(.result, 13245L)) {\n    pass(\"There are 13245 observations in the dataset.\")\n  }\n  if(identical(.result, 10) | identical(.result , 10L)) {\n    fail(\"There are 13245 observations in the dataset.\")\n  }\n  fail(\"Not quite. Each observation is represented in one row. Can you remember which function we use to calculate the number of rows?\")\n})\n```\n\n### Examining further\n\nEach column represents a variable. We can get a list of the variables in the data frame using the `names()` function.\n\n```{r edibnb-names, exercise=TRUE}\nnames(edibnb)\n```\n\nThe variables and their descriptions are given below:\n\n| Variable Name   |  Description\n|:----------------|:--------------------------------\n| `id` | ID number of the listing\n| `price` | Price, in GBP, for one night stay\n| `neighbourhood` | Neighbourhood listing is located in\n| `accommodates` | Number of people listing accommodates\n| `bathrooms` | Number of bathrooms\n| `bedrooms` | Number of bedrooms\n| `beds` | Number of beds (which can be different than the number of bedrooms)\n| `review_scores_rating` | Average rating of property\n| `number_of_reviews` | Number of reviews\n| `listing_url` | Listing URL\n\n\n## Data visualisation\n\n### Building a histogram\n\nCreate a histogram of the distribution of Airbnb listing prices (nightly rates) \nin Edinburgh. Sample code is provided below, but you will need to fill in the blanks.\n\n```{r price-histogram, exercise=TRUE}\nggplot(data = ___, mapping = aes(x = ___)) +\n  geom_histogram() +\n  labs(\n    x = \"Airbnb listing price, in £\",\n    y = \"Frequency\",\n    title = \"Distribution of Airbnb nightly rates in Edinburgh\"\n  )\n```\n\n```{r price-histogram-hint-1}\nggplot(data = edibnb, mapping = aes(x = ___)) +\n  geom_histogram() +\n  labs(\n    x = \"Airbnb listing price, in £\",\n    y = \"Frequency\",\n    title = \"Distribution of Airbnb nightly rates in Edinburgh\"\n  )\n```\n\n```{r price-histogram-solution}\nggplot(data = edibnb, mapping = aes(x = price)) +\n  geom_histogram() +\n  labs(\n    x = \"Airbnb listing price, in £\",\n    y = \"Frequency\",\n    title = \"Distribution of Airbnb nightly rates in Edinburgh\"\n  )\n```\n\n```{r price-histogram-check}\ngrade_this_code(\"And note that there are a couple warnings, we'll get to those in a bit.\")\n```\n\n\n### Interpreting the histogram\n\n```{r price-shape-quiz-1}\nquiz(\n  caption = \"\",\n  question(\"Which of the following describes the shape of the distribution of nightly rates of Airbnb edibnb in Edinburgh? Check all that apply.\",\n           answer(\"Right skewed\",\n                  correct = TRUE),\n           answer(\"Left skewed\",\n                  message = \"Skew is on the side of the longer tail\"),\n           answer(\"Symmetric\",\n                  message = \"If you were to draw a vertical line down the middle of the x-axis, would the left and right sides of the distribution look like mirror images?\"),\n           answer(\"Unimodal\",\n                  correct = TRUE),\n           answer(\"Bimodal\",\n                  message = \"How many prominent peaks, or modes, do you see? (recall \\\"bi\\\" means \\\"two\\\")\"),\n           answer(\"Multimodal\",\n                  message = \"A distribution is said to be multimodal if there are three or more prominent peaks. How many prominent peaks, or modes, do you see?\"),\n           allow_retry = TRUE),\n  question(\"Which of the following is false?\",\n           answer(\"There are no listings with a nightly rate above £1,250.\"),\n           answer(\"More than 50% of listings have a nightly rate below £250.\"),\n           answer(\"More than 25% of listings have a nightly rate above £500.\",\n                  correct = TRUE),\n           answer(\"It is possible that some of the listings have a nightly rate of £0.\"),\n           allow_retry = TRUE)\n)\n```\n\n\n### Faceted histograms\n\nCreate a faceted histogram where each facet represents a neighbourhood and displays the distribution of Airbnb prices in that neighbourhood. Sample code is provided below, but you will need to fill in the blanks.\n\n```{r faceted-histo, exercise=TRUE}\nggplot(data = ___, mapping = aes(x = ___)) +\n  geom_histogram() +\n  facet_wrap(~___) +\n  labs(\n    x = \"Airbnb listing price, in £\",\n    y = \"Frequency\",\n    title = \"Distribution of Airbnb nightly rates in Edinburgh\",\n    subtitle = \"By neighbourhood\"\n  )\n```\n\n```{r faceted-histo-hint-1}\nggplot(data = edibnb, mapping = aes(x = ___)) +\n  geom_histogram() +\n  facet_wrap(~___) +\n  labs(\n    x = \"Airbnb listing price, in £\",\n    y = \"Frequency\",\n    title = \"Distribution of Airbnb nightly rates in Edinburgh\",\n    subtitle = \"By neighbourhood\"\n  )\n```\n\n```{r faceted-histo-hint-2}\nggplot(data = edibnb, mapping = aes(x = price)) +\n  geom_histogram() +\n  facet_wrap(~___) +\n  labs(\n    x = \"Airbnb listing price, in £\",\n    y = \"Frequency\",\n    title = \"Distribution of Airbnb nightly rates in Edinburgh\",\n    subtitle = \"By neighbourhood\"\n  )\n```\n\n```{r faceted-histo-solution}\nggplot(data = edibnb, mapping = aes(x = price)) +\n  geom_histogram() +\n  facet_wrap(~neighbourhood) +\n  labs(\n    x = \"Airbnb listing price, in £\",\n    y = \"Frequency\",\n    title = \"Distribution of Airbnb nightly rates in Edinburgh\",\n    subtitle = \"By neighbourhood\"\n  )\n```\n\n```{r faceted-histo-check}\ngrade_this_code(\"You've successfully created a faceted histogram.\")\n```\n\n### What do the warnings mean?\n\nYou'll see in the above code that R gives us a couple of *warnings*. Let's analyse these:\n\n#### Binwidth warning\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\nThe binwidth of a histogram defines the width each bar (bin) spans. Since we haven't specified a particular value in `geom_histogram()`, R picks one for us, but it also lets us know that it would be better for us to pick a `binwidth` intentionally. We'll get to practice this in a bit.\n\n#### Removed rows warning\n\n```\nWarning: Removed 199 rows containing non-finite values (stat_bin).\n```\n\nThis second warning is a consequence of the fact that we are working with a real-world dataset, and thus some of the values in the data are missing (we don't know the prices for those listings) and are encoded as `NA`s. If we don't know the price, we can't represent it on the plot.\n\nThis doesn't stop R from creating the histogram, but it does mean some observations are omitted from this visualisation (199 of them, to be precise).\n\n\n### Binwidth experimentation\n\nInstead of having R pick a `binwidth` itself, try out different binwidths using the code below:\n\n```{r binwidth-test, exercise = TRUE, warning=FALSE}\nggplot(data = ___, mapping = aes(x = ___)) +\n  geom_histogram(binwidth = ___) +\n  facet_wrap(~___) +\n  labs(\n    x = \"Airbnb listing price, in £\",\n    y = \"Frequency\",\n    title = \"Distribution of Airbnb nightly rates in Edinburgh\"\n  )\n```\n\nWhat is a reasonable value for the `binwidth` parameter? Put your answer in the block below:\n\n```{r reasonable-binwidth, exercise = TRUE}\n\n```\n\n```{r reasonable-binwidth-check}\ngrade_this({\n  if(.result >= 20 & .result <= 100) {\n    pass(\"That's a suitable binwidth\")\n    }\n  if(.result < 20) {\n    fail(\"That binwidth seems quite small. See how narrow the bins are using that width.\")\n  }\n  if(.result > 100) {\n    fail(\"That binwidth seems quite large. See how wide the bins are using that width.\")\n  }\n  fail(\"Invalid binwidth.\")\n})\n```\n\n\n### Deconstructing the code\n\nLet’s deconstruct this code:\n\n- `ggplot()` is the function we are using to build our plot, in layers.\n- In the first layer we always define the data frame as the first argument. Then, we define the mappings between the variables in the dataset and the **aes**thetics of the plot (e.g. x and y coordinates, colours, etc.).\n- In the next layer we represent the data with **geom**etric shapes, in this case with a histogram. As you've just seen, it's good to try a few options to find a reasonable binwidth.\n- In the final layer we facet the data by neighbourhood.\n\n### Visualising review scores\n\nCreate a similar visualisation, this time showing the distribution of review scores (`review_scores_rating`) across neighbourhoods.\n\n```{r reviews-histogram, exercise = TRUE, warning=FALSE}\nggplot(data = ___, mapping = aes(x = ___)) +\n  geom_histogram() +\n  facet_wrap(~___) +\n  labs(\n    x = \"Average rating score of property\",\n    y = \"Frequency\",\n    title = \"Distribution of Airbnb rating scores in Edinburgh\",\n    subtitle = \"By neighbourhood\"\n  )\n```\n\n```{r reviews-histogram-solution}\nggplot(data = edibnb, mapping = aes(x = review_scores_rating)) +\n  geom_histogram() +\n  facet_wrap(~neighbourhood) +\n  labs(\n    x = \"Average rating score of property\",\n    y = \"Frequency\",\n    title = \"Distribution of Airbnb rating scores in Edinburgh\",\n    subtitle = \"By neighbourhood\"\n  )\n```\n\n```{r reviews-histogram-check}\ngrade_this_code(\"Your solution is correct!\")\n```\n\n### Popular neighbourhoods\n\nWhich neighbourhood has the most ratings around 100%? Report your answer as a text string in quotation marks, e.g. for Tollcross, type in `\"Tollcross\"`.\n\n```{r ratings-neighbourhood, exercise=TRUE}\n\n```\n\n```{r ratings-neighbourhood-hint}\nDid you forget to add the quotation marks?\n```\n\n```{r ratings-neighbourhood-check}\ngrade_this({\n  if(identical(tolower(.result), \"leith\")) {\n    pass(\"Leith has the highest number of perfect ratings.\")\n  }\n  fail(\"Not quite. Try looking at the height of the bars and the labels of the x-axis.\")\n})\n```\n\n```{r reviews-quiz}\nquestion(\"How do users generally rate properties on Airbnb?\",\n  answer(\"Generally positively\",\n         correct = TRUE),\n  answer(\"Generally negatively.\"),\n  answer(\"Can't say from the visualisation.\"),\n  correct = \"Correct!\",\n  allow_retry = TRUE\n)\n```\n\n## Wrap up\n\nCongratulations, you've finished the first tutorial! We hope that you enjoyed practising your data handling, visualisation, and interpretation skills along the way.\n